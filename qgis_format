#!/usr/bin/python

# Open data sensor file and file for formatted data
try:
	sensorData = open('DATA.TXT', 'r')
except:
	print("Error: Can not open sensor data file")
try:
	qgisData = open('output.txt', 'r+')
except: 
	print("Error: Can not open file for formatted data")

# Seperate Lat and Long with commas, add newline between each set
# Coordinates are now in 'Degree Minute Decimal' format (DMM)
for line in sensorData:
	# Store hemisphere (ex. N,W)
	hem = [line[9],line[21]]
	form = line.replace("N ",",")
	dmmArr = form.split('W ')

# Done with sensor data file
sensorData.close()

# Convert each DMM coordinate to 'Degree Decimal' (DD) format for QGIS
# Will appropiate add negative coordinates based on hemisphere
for dmm in dmmArr:
	if (len(dmm) == 20):
		if ((hem[0] == 'N') and (hem[1] == 'W')): 
			qgisData.write(str(float(dmm[:2]) + float(dmm[2:9])/60.0) + ',' + str(round(float(dmm[10:13]) + float(dmm[13:])/60.0, 6)) + '\n')
		if ((hem[0] == 'S') and (hem[1] == 'W')):
			qgisData.write('-' + str(float(dmm[:2]) + float(dmm[2:9])/60.0) + ',' + str(round(float(dmm[10:13]) + float(dmm[13:])/60.0, 6)) + '\n')
		if ((hem[0] == 'N') and (hem[1] == 'E')):
			qgisData.write(str(float(dmm[:2]) + float(dmm[2:9])/60.0) + ',' + '-' + str(round(float(dmm[10:13]) + float(dmm[13:])/60.0, 6)) + '\n')
		if ((hem[0] == 'S') and (hem[1] == 'E')):
			qgisData.write('-' + str(float(dmm[:2]) + float(dmm[2:9])/60.0) + ',' + '-' + str(round(float(dmm[10:13]) + float(dmm[13:])/60.0, 6)) + '\n')

	
qgisData.close()





